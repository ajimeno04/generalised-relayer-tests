{"abi":[{"type":"function","name":"calcAsyncPriceFrom","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"fromAsset","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"calcCombinedPriceCurves","inputs":[{"name":"input","type":"uint256","internalType":"uint256"},{"name":"A","type":"uint256","internalType":"uint256"},{"name":"B","type":"uint256","internalType":"uint256"},{"name":"W_A","type":"uint256","internalType":"uint256"},{"name":"W_B","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"calcCurrentPrice","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"fromAsset","type":"address","internalType":"address"},{"name":"toAsset","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"calcCurrentPriceTo","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"toAsset","type":"address","internalType":"address"},{"name":"calcAsyncPriceFromQuote","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"calcFee","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"calcLocalSwap","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"fromAsset","type":"address","internalType":"address"},{"name":"toAsset","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"calcPriceCurveArea","inputs":[{"name":"input","type":"uint256","internalType":"uint256"},{"name":"A","type":"uint256","internalType":"uint256"},{"name":"W","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"calcPriceCurveLimit","inputs":[{"name":"U","type":"uint256","internalType":"uint256"},{"name":"B","type":"uint256","internalType":"uint256"},{"name":"W","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"calcPriceCurveLimitShare","inputs":[{"name":"U","type":"uint256","internalType":"uint256"},{"name":"W","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"calcReceiveAsset","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"toAsset","type":"address","internalType":"address"},{"name":"U","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"calcSendAsset","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"fromAsset","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getTrueWeight","inputs":[{"name":"vault","type":"address","internalType":"address"},{"name":"asset","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"}],"bytecode":{"object":"0x6080806040523461001657611386908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c918263030d21d1146104335750816314807a59146103f8578163179478a7146103dc5781631d16c3ee146103b357816335f4dc63146102605781634eb57ce6146101e3578163561ecfe1146101c7578163711d72871461017e575080638d2002d314610151578063a2930f3c14610117578063c3669cb3146100ea5763d0829e53146100a957600080fd5b346100e6576020906100df6100cf6100d96100d46100c6366105c3565b9490918261094f565b6110b4565b6110f7565b90610689565b9051908152f35b5080fd5b50346100e657806003193601126100e6576020906100df610109610513565b61011161053b565b90610da0565b50346100e65760806003193601126100e6576020906100df610137610513565b61013f61053b565b61014761055e565b9060643592610bcc565b50346100e657806003193601126100e6576020906100df610170610513565b61017861053b565b9061095c565b8284346101c45760a06003193601126101c457506100df602092602435906101bf6101b76100d4608435946100cf60443595358261094f565b606435610689565b610eba565b80fd5b5050346100e6576020906100df6101dd366105c3565b91610eba565b8284346101c457816003193601126101c45761021261020d610208602435863561069c565b610904565b610ee7565b90670de0b6b3a764000090828203918211610234576020846100df85856110b4565b806011867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b8284346101c45761027036610581565b9273ffffffffffffffffffffffffffffffffffffffff8083168651917f70a0823100000000000000000000000000000000000000000000000000000000835285169081898401526020988984602481855afa9384156103a957908a92918695610371575b506024908a5194859384927f24351d570000000000000000000000000000000000000000000000000000000084528301525afa928315610366578093610330575b50509161032a6101dd926100df96959461064d565b9261095c565b909192508782813d831161035f575b61034981836105dd565b810103126101c45750519061032a6100df610315565b503d61033f565b8751903d90823e3d90fd5b838193949296503d83116103a2575b61038a81836105dd565b8101031261039e57519289919060246102d4565b8480fd5b503d610380565b89513d87823e3d90fd5b5050346100e657806003193601126100e6576020906100df6103d3610513565b60243590610844565b5050346100e6576020906100df6103f236610581565b916106d5565b5050346100e65760606003193601126100e6576020906100df610419610513565b61042161053b565b6103f261042c61055e565b9183610da0565b939150346100e6576024908460208161044b36610581565b969199909573ffffffffffffffffffffffffffffffffffffffff907f70a08231000000000000000000000000000000000000000000000000000000008352818c169083015286165afa9384156105085780946104cd575b6020866100df896100d96100d48a6100cf6104c78c6104c18d8861095c565b96610844565b8261094f565b909193506020823d602011610500575b816104ea602093836105dd565b810103126101c4575051916100d46100d96104a2565b3d91506104dd565b8551903d90823e3d90fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361053657565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361053657565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361053657565b60031960609101126105365773ffffffffffffffffffffffffffffffffffffffff90600435828116810361053657916024359081168103610536579060443590565b600319606091011261053657600435906024359060443590565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761061e57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b9190820391821161065a57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181029291811591840414171561065a57565b81156106a6570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b9073ffffffffffffffffffffffffffffffffffffffff90818116604051927f70a0823100000000000000000000000000000000000000000000000000000000845284168060048501526020918285602481845afa94851561080957600095610815575b5082906024604051809481937f24351d5700000000000000000000000000000000000000000000000000000000835260048301525afa918215610809576000926107d9575b505061032a9061078c9361064d565b821580156107d1575b6107c957670de0b6b3a76400009182810292818404149015171561065a576107c6926107c091610689565b9061069c565b90565b505050600090565b508015610795565b90809250813d8311610802575b6107f081836105dd565b8101031261053657518261032a61077d565b503d6107e6565b6040513d6000823e3d90fd5b9094508281813d831161083d575b61082d81836105dd565b8101031261053657519382610738565b503d610823565b602073ffffffffffffffffffffffffffffffffffffffff916004604051809481937f46c3a2fd000000000000000000000000000000000000000000000000000000008352165afa908115610809576000916108c1575b5067ffffffffffffffff670de0b6b3a76400009116810390811161065a576107c691610e71565b6020813d6020116108fc575b816108da602093836105dd565b810103126100e657519067ffffffffffffffff821682036101c457503861089a565b3d91506108cd565b7f8000000000000000000000000000000000000000000000000000000000000000811461065a5760000390565b90816020910312610536575165ffffffffffff811681036105365790565b9190820180921161065a57565b9073ffffffffffffffffffffffffffffffffffffffff80921660408051907f9584c88800000000000000000000000000000000000000000000000000000000825260208083600481875afa928315610bc157600093610ba2575b5065ffffffffffff809316958251957f32a3385e00000000000000000000000000000000000000000000000000000000875216938460048701528186602481845afa958615610b5e57600096610b73575b508615610b69578251947f7d4c3eca00000000000000000000000000000000000000000000000000000000865260048601528185602481845afa948515610b5e57600095610b2f575b5090806004928451938480927f128581000000000000000000000000000000000000000000000000000000000082525afa928315610b255750600092610af8575b5050169083421015610af15782811115610ad357926107c0610acd92610ac7610abd866107c69861064d565b6100d9834261064d565b9261064d565b9061094f565b926107c0610aeb92610ac7610abd6107c6978761064d565b9061064d565b9250505090565b610b179250803d10610b1e575b610b0f81836105dd565b810190610931565b3880610a91565b503d610b05565b513d6000823e3d90fd5b90948282813d8311610b57575b610b4681836105dd565b810103126101c45750519381610a50565b503d610b3c565b83513d6000823e3d90fd5b5050505050905090565b90958282813d8311610b9b575b610b8a81836105dd565b810103126101c45750519438610a07565b503d610b80565b81610bba9294503d8511610b1e57610b0f81836105dd565b91386109b6565b82513d6000823e3d90fd5b919273ffffffffffffffffffffffffffffffffffffffff9060408051927f70a082310000000000000000000000000000000000000000000000000000000090818552808716908160048701526020908187602481848c165afa968715610d6657600097610d71575b50891684519384528260048501528184602481845afa938415610d6657600094610d37575b50819060248651809581937f24351d5700000000000000000000000000000000000000000000000000000000835260048301525afa938415610b255750600093610d03575b5050610cb0610cbe92610cb79261064d565b948661095c565b958561095c565b93848614610ce1576100d46101bf936100cf6104c76107c699956100d995610844565b93506107c6945080610cfd6107c0946100d9610acd9488610844565b94610844565b90809350813d8311610d30575b610d1a81836105dd565b8101031261053657905190610cb0610cb7610c9e565b503d610d10565b9093508181813d8311610d5f575b610d4f81836105dd565b8101031261053657519281610c59565b503d610d45565b85513d6000823e3d90fd5b90968282813d8311610d99575b610d8881836105dd565b810103126101c45750519538610c34565b503d610d7e565b90602491602073ffffffffffffffffffffffffffffffffffffffff604051948580927f70a08231000000000000000000000000000000000000000000000000000000008252808616600483015286165afa92831561080957600093610e3b575b5090610e0b9161095c565b8015610e3457670de0b6b3a76400009182810292818404149015171561065a576107c69161069c565b5050600090565b90926020823d602011610e69575b81610e56602093836105dd565b810103126101c457505191610e0b610e00565b3d9150610e49565b90807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482118102610eac57670de0b6b3a764000091020490565b63bac65e5b6000526004601cfd5b610208610ecb929361020d9261069c565b670de0b6b3a764000090810390811161065a576107c691610e71565b7ffffffffffffffffffffffffffffffffffffffffffffffffdc0d0570925a462d78113156110ae57680755bf798b4a1bf1e58112156110a0576503782dace9d990604e1b0574029d9dc38563c32e5c2f6dc192ee70ef65f9978af36bb17217f7d1cf79abc9e3b3989179d835ebba824c98fb31b83b2ca45c0000000000000000000000006060916b8000000000000000000000008582851b0501831d94850290036e0587f503bb6ea29d25fcb740196450816c10fe68e7fd37d0007b713f7650810102841d936e05180bb14799ab47a8a8cb2a527d57837ffffffffffffffffffffffffffffffffffffd38dc772608b0ae56cce01296c0eb816db1bbb201f443cf962f1a1d3db4a5817fffffffffffffffffffffffffffffffffffffe5adedaa1cb095af9e4da10e363c816d0277594991cfc85f6e2461837cd9817fffffffffffffffffffffffffffffffffffffffdbf3ccf1604d263450f02a55048101028a1d0102881d0102861d0102841d0102821d01947ffffffffffffffffffffffffffffffffffffffe2c69812cf03b0763fd454a8f7e846d02d16720577bd19bf614176fe9ea830192010102901d01020105029060c3031c90565b63a37bfec96000526004601cfd5b50600090565b670de0b6b3a7640000907812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f2181118202158302156110e957020490565b637c5f487d6000526004601cfd5b806fffffffffffffffffffffffffffffffff1060071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff1060031b176000821315611342577ff8f9f9faf9fdfafbf9fdfcfdfafbfcfef9fafdfafcfcfbfefafafcfbffffffff6f8421084210842108cc6318c6db6d54be83831c1c601f161a1890811b609f1c7ffffffffffffffff5f6af8f7b3396644f18e157960000000000000000000000006060917fffffffffffffffffffffffffffffffffffffff465fda27eb4d63ded474e5f832816c465772b2bbbb5f824b15207a30018202841d6d0388eaa27412d5aca026815d636e018202841d6d0df99ac502031bf953eff472fdcc018202841d6d13cdffb29d51d99322bdff5f2211018202841d6d0a0f742023def783a307a986912e018202841d6d01920d8043ca89b5239253284e42018202841d6c0b7a86d7375468fac667a0a5270193827ffffffffffffffffffffffffffffffffffffffdc7b88c420e53a9890533129f6f817fffffffffffffffffffffffffffffffffffffff73c0c716a594e00d54e3c4cbc9818080806c29508e458543d8aa4df2abee780102871d6d0139601a2efabe717e604cbb48940102861d6d02247f7a7b6594320649aa03aba10102851d0102831d0102901d01020105711340daa0d5f769dba1915cef59f0815a55060290609f037d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b302017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d90565b631615e6386000526004601cfdfea264697066735822122072d611f58a882f416e6208a73e928f34713270235904199078699fefa229e40764736f6c63430008160033","sourceMap":"590:14224:83:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060408181526004918236101561001657600080fd5b600092833560e01c918263030d21d1146104335750816314807a59146103f8578163179478a7146103dc5781631d16c3ee146103b357816335f4dc63146102605781634eb57ce6146101e3578163561ecfe1146101c7578163711d72871461017e575080638d2002d314610151578063a2930f3c14610117578063c3669cb3146100ea5763d0829e53146100a957600080fd5b346100e6576020906100df6100cf6100d96100d46100c6366105c3565b9490918261094f565b6110b4565b6110f7565b90610689565b9051908152f35b5080fd5b50346100e657806003193601126100e6576020906100df610109610513565b61011161053b565b90610da0565b50346100e65760806003193601126100e6576020906100df610137610513565b61013f61053b565b61014761055e565b9060643592610bcc565b50346100e657806003193601126100e6576020906100df610170610513565b61017861053b565b9061095c565b8284346101c45760a06003193601126101c457506100df602092602435906101bf6101b76100d4608435946100cf60443595358261094f565b606435610689565b610eba565b80fd5b5050346100e6576020906100df6101dd366105c3565b91610eba565b8284346101c457816003193601126101c45761021261020d610208602435863561069c565b610904565b610ee7565b90670de0b6b3a764000090828203918211610234576020846100df85856110b4565b806011867f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b8284346101c45761027036610581565b9273ffffffffffffffffffffffffffffffffffffffff8083168651917f70a0823100000000000000000000000000000000000000000000000000000000835285169081898401526020988984602481855afa9384156103a957908a92918695610371575b506024908a5194859384927f24351d570000000000000000000000000000000000000000000000000000000084528301525afa928315610366578093610330575b50509161032a6101dd926100df96959461064d565b9261095c565b909192508782813d831161035f575b61034981836105dd565b810103126101c45750519061032a6100df610315565b503d61033f565b8751903d90823e3d90fd5b838193949296503d83116103a2575b61038a81836105dd565b8101031261039e57519289919060246102d4565b8480fd5b503d610380565b89513d87823e3d90fd5b5050346100e657806003193601126100e6576020906100df6103d3610513565b60243590610844565b5050346100e6576020906100df6103f236610581565b916106d5565b5050346100e65760606003193601126100e6576020906100df610419610513565b61042161053b565b6103f261042c61055e565b9183610da0565b939150346100e6576024908460208161044b36610581565b969199909573ffffffffffffffffffffffffffffffffffffffff907f70a08231000000000000000000000000000000000000000000000000000000008352818c169083015286165afa9384156105085780946104cd575b6020866100df896100d96100d48a6100cf6104c78c6104c18d8861095c565b96610844565b8261094f565b909193506020823d602011610500575b816104ea602093836105dd565b810103126101c4575051916100d46100d96104a2565b3d91506104dd565b8551903d90823e3d90fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361053657565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361053657565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361053657565b60031960609101126105365773ffffffffffffffffffffffffffffffffffffffff90600435828116810361053657916024359081168103610536579060443590565b600319606091011261053657600435906024359060443590565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761061e57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b9190820391821161065a57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8181029291811591840414171561065a57565b81156106a6570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b9073ffffffffffffffffffffffffffffffffffffffff90818116604051927f70a0823100000000000000000000000000000000000000000000000000000000845284168060048501526020918285602481845afa94851561080957600095610815575b5082906024604051809481937f24351d5700000000000000000000000000000000000000000000000000000000835260048301525afa918215610809576000926107d9575b505061032a9061078c9361064d565b821580156107d1575b6107c957670de0b6b3a76400009182810292818404149015171561065a576107c6926107c091610689565b9061069c565b90565b505050600090565b508015610795565b90809250813d8311610802575b6107f081836105dd565b8101031261053657518261032a61077d565b503d6107e6565b6040513d6000823e3d90fd5b9094508281813d831161083d575b61082d81836105dd565b8101031261053657519382610738565b503d610823565b602073ffffffffffffffffffffffffffffffffffffffff916004604051809481937f46c3a2fd000000000000000000000000000000000000000000000000000000008352165afa908115610809576000916108c1575b5067ffffffffffffffff670de0b6b3a76400009116810390811161065a576107c691610e71565b6020813d6020116108fc575b816108da602093836105dd565b810103126100e657519067ffffffffffffffff821682036101c457503861089a565b3d91506108cd565b7f8000000000000000000000000000000000000000000000000000000000000000811461065a5760000390565b90816020910312610536575165ffffffffffff811681036105365790565b9190820180921161065a57565b9073ffffffffffffffffffffffffffffffffffffffff80921660408051907f9584c88800000000000000000000000000000000000000000000000000000000825260208083600481875afa928315610bc157600093610ba2575b5065ffffffffffff809316958251957f32a3385e00000000000000000000000000000000000000000000000000000000875216938460048701528186602481845afa958615610b5e57600096610b73575b508615610b69578251947f7d4c3eca00000000000000000000000000000000000000000000000000000000865260048601528185602481845afa948515610b5e57600095610b2f575b5090806004928451938480927f128581000000000000000000000000000000000000000000000000000000000082525afa928315610b255750600092610af8575b5050169083421015610af15782811115610ad357926107c0610acd92610ac7610abd866107c69861064d565b6100d9834261064d565b9261064d565b9061094f565b926107c0610aeb92610ac7610abd6107c6978761064d565b9061064d565b9250505090565b610b179250803d10610b1e575b610b0f81836105dd565b810190610931565b3880610a91565b503d610b05565b513d6000823e3d90fd5b90948282813d8311610b57575b610b4681836105dd565b810103126101c45750519381610a50565b503d610b3c565b83513d6000823e3d90fd5b5050505050905090565b90958282813d8311610b9b575b610b8a81836105dd565b810103126101c45750519438610a07565b503d610b80565b81610bba9294503d8511610b1e57610b0f81836105dd565b91386109b6565b82513d6000823e3d90fd5b919273ffffffffffffffffffffffffffffffffffffffff9060408051927f70a082310000000000000000000000000000000000000000000000000000000090818552808716908160048701526020908187602481848c165afa968715610d6657600097610d71575b50891684519384528260048501528184602481845afa938415610d6657600094610d37575b50819060248651809581937f24351d5700000000000000000000000000000000000000000000000000000000835260048301525afa938415610b255750600093610d03575b5050610cb0610cbe92610cb79261064d565b948661095c565b958561095c565b93848614610ce1576100d46101bf936100cf6104c76107c699956100d995610844565b93506107c6945080610cfd6107c0946100d9610acd9488610844565b94610844565b90809350813d8311610d30575b610d1a81836105dd565b8101031261053657905190610cb0610cb7610c9e565b503d610d10565b9093508181813d8311610d5f575b610d4f81836105dd565b8101031261053657519281610c59565b503d610d45565b85513d6000823e3d90fd5b90968282813d8311610d99575b610d8881836105dd565b810103126101c45750519538610c34565b503d610d7e565b90602491602073ffffffffffffffffffffffffffffffffffffffff604051948580927f70a08231000000000000000000000000000000000000000000000000000000008252808616600483015286165afa92831561080957600093610e3b575b5090610e0b9161095c565b8015610e3457670de0b6b3a76400009182810292818404149015171561065a576107c69161069c565b5050600090565b90926020823d602011610e69575b81610e56602093836105dd565b810103126101c457505191610e0b610e00565b3d9150610e49565b90807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482118102610eac57670de0b6b3a764000091020490565b63bac65e5b6000526004601cfd5b610208610ecb929361020d9261069c565b670de0b6b3a764000090810390811161065a576107c691610e71565b7ffffffffffffffffffffffffffffffffffffffffffffffffdc0d0570925a462d78113156110ae57680755bf798b4a1bf1e58112156110a0576503782dace9d990604e1b0574029d9dc38563c32e5c2f6dc192ee70ef65f9978af36bb17217f7d1cf79abc9e3b3989179d835ebba824c98fb31b83b2ca45c0000000000000000000000006060916b8000000000000000000000008582851b0501831d94850290036e0587f503bb6ea29d25fcb740196450816c10fe68e7fd37d0007b713f7650810102841d936e05180bb14799ab47a8a8cb2a527d57837ffffffffffffffffffffffffffffffffffffd38dc772608b0ae56cce01296c0eb816db1bbb201f443cf962f1a1d3db4a5817fffffffffffffffffffffffffffffffffffffe5adedaa1cb095af9e4da10e363c816d0277594991cfc85f6e2461837cd9817fffffffffffffffffffffffffffffffffffffffdbf3ccf1604d263450f02a55048101028a1d0102881d0102861d0102841d0102821d01947ffffffffffffffffffffffffffffffffffffffe2c69812cf03b0763fd454a8f7e846d02d16720577bd19bf614176fe9ea830192010102901d01020105029060c3031c90565b63a37bfec96000526004601cfd5b50600090565b670de0b6b3a7640000907812725dd1d243aba0e75fe645cc4873f9e65afe688c928e1f2181118202158302156110e957020490565b637c5f487d6000526004601cfd5b806fffffffffffffffffffffffffffffffff1060071b81811c67ffffffffffffffff1060061b1781811c63ffffffff1060051b1781811c61ffff1060041b1781811c60ff1060031b176000821315611342577ff8f9f9faf9fdfafbf9fdfcfdfafbfcfef9fafdfafcfcfbfefafafcfbffffffff6f8421084210842108cc6318c6db6d54be83831c1c601f161a1890811b609f1c7ffffffffffffffff5f6af8f7b3396644f18e157960000000000000000000000006060917fffffffffffffffffffffffffffffffffffffff465fda27eb4d63ded474e5f832816c465772b2bbbb5f824b15207a30018202841d6d0388eaa27412d5aca026815d636e018202841d6d0df99ac502031bf953eff472fdcc018202841d6d13cdffb29d51d99322bdff5f2211018202841d6d0a0f742023def783a307a986912e018202841d6d01920d8043ca89b5239253284e42018202841d6c0b7a86d7375468fac667a0a5270193827ffffffffffffffffffffffffffffffffffffffdc7b88c420e53a9890533129f6f817fffffffffffffffffffffffffffffffffffffff73c0c716a594e00d54e3c4cbc9818080806c29508e458543d8aa4df2abee780102871d6d0139601a2efabe717e604cbb48940102861d6d02247f7a7b6594320649aa03aba10102851d0102831d0102901d01020105711340daa0d5f769dba1915cef59f0815a55060290609f037d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b302017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d90565b631615e6386000526004601cfdfea264697066735822122072d611f58a882f416e6208a73e928f34713270235904199078699fefa229e40764736f6c63430008160033","sourceMap":"590:14224:83:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8577:33;;590:14224;8577:33;;;590:14224;;;;;;;;;;;;;;;9623:31;590:14224;9623:31;;;590:14224;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1044:84:65;1112:9;1056:71;1087:38;590:14224:83;;;:::i;:::-;1112:9:65;;;;;:::i;:::-;1087:38;:::i;:::-;1056:71;:::i;:::-;1044:84;;:::i;:::-;590:14224:83;;;;;;;;;;;;;;;;-1:-1:-1;;590:14224:83;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;590:14224:83;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;-1:-1:-1;;590:14224:83;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;590:14224:83;;;;;;5595:64;590:14224;;;;;1044:84:65;1056:71;1087:38;590:14224:83;;;1112:9:65;590:14224:83;;;;1112:9:65;;:::i;1056:71::-;590:14224:83;;1044:84:65;:::i;:::-;5595:64:83;:::i;590:14224::-;;;;;;;;;;;4776:29;590:14224;;;:::i;:::-;4776:29;;:::i;590:14224::-;;;;;;;-1:-1:-1;;590:14224:83;;;;;6199:40;6224:14;6232:5;590:14224;;;;6232:5;:::i;:::-;6224:14;:::i;:::-;6199:40;:::i;:::-;2458:4:50;;590:14224:83;;;;;;;;;;6602:60;;;;;:::i;590:14224::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;9623:31;590:14224;9623:31;;590:14224;;9623:31;;;;;590:14224;9623:31;;;;590:14224;9623:31;;;;;;;;;;;;;;;;;590:14224;;;;;;9657:53;;;;;590:14224;9657:53;;;;590:14224;9657:53;;;;;;;;;;;590:14224;9623:87;;;;9732:29;9623:87;10079:29;9623:87;;;;:::i;:::-;9732:29;;:::i;9657:53::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;590:14224;;;;-1:-1:-1;590:14224:83;;9623:87;10079:29;9657:53;;;;;;;;590:14224;;;;;;;;;;9623:31;;;;;;;;;;;;;;;;;;:::i;:::-;;;590:14224;;;;;;;;;;9623:31;;590:14224;;;;9623:31;;;;;;590:14224;;;;;;;;;;;;;;;;-1:-1:-1;;590:14224:83;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;590:14224:83;;;;;;;14746:59;590:14224;;:::i;:::-;;;:::i;:::-;14692:36;590:14224;;:::i;:::-;14692:36;;;:::i;590:14224::-;;;;;;;;;;8577:33;590:14224;;;;:::i;:::-;;;;;;;8577:33;590:14224;8577:33;;590:14224;;;8577:33;;;590:14224;;;8577:33;;;;;;;;;;;590:14224;8577:33;8632:31;1044:84:65;8632:31:83;1056:71:65;1087:38;8632:31:83;1112:9:65;8809:22:83;8632:31;;;;;:::i;:::-;8809:22;;:::i;:::-;1112:9:65;;:::i;8577:33:83:-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;590:14224;;;;-1:-1:-1;590:14224:83;;1087:38:65;1056:71;8577:33:83;;;;;-1:-1:-1;8577:33:83;;;590:14224;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;-1:-1:-1;;590:14224:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;590:14224:83;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;13620:471;;590:14224;;;;;;;13803:31;590:14224;13803:31;;590:14224;;13803:31;;;;590:14224;13803:31;;;;590:14224;13803:31;;;;;;;;;-1:-1:-1;13803:31:83;;;13620:471;590:14224;;;;;;13837:53;;;;590:14224;13837:53;;13803:31;13837:53;;590:14224;13837:53;;;;;;;-1:-1:-1;13837:53:83;;;13620:471;13803:87;;;;13915:29;13803:87;;:::i;13915:29::-;13959:28;;13958:45;;;;13620:471;13954:59;;14044:6;590:14224;;;;;;;;;;;;;;;14031:53;14053:30;;;;:::i;:::-;14031:53;;:::i;:::-;13620:471;:::o;13954:59::-;14005:8;;;-1:-1:-1;14005:8:83;:::o;13958:45::-;13993:9;;;13958:45;;13837:53;;;;;;;;;;;;;;;;:::i;:::-;;;590:14224;;;;;;13803:87;13837:53;;;;;;;;590:14224;;;-1:-1:-1;590:14224:83;;;;;13803:31;;;;;;;;;;;;;;;;;:::i;:::-;;;590:14224;;;;;;;13803:31;;;;;;;3122:227;3223:40;590:14224;3122:227;3223:40;590:14224;;3223:40;;;;590:14224;3223:40;;590:14224;3223:40;;;;;;;;;;;3122:227;2458:4:50;590:14224:83;2458:4:50;590:14224:83;;;;;;;;;3281:61;;;:::i;3223:40::-;;;;;;;;;;;;;;;:::i;:::-;;;590:14224;;;;;;;;;;;;;3223:40;;;;;;;-1:-1:-1;3223:40:83;;590:14224;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;1307:1537::-;;590:14224;;;;;;;1492:48;590:14224;1492:48;;;;;;;;;;;;;;;;;;;1307:1537;590:14224;;;;;;;;1575:43;590:14224;1575:43;;590:14224;1575:43;;1492:48;1575:43;;590:14224;1575:43;;590:14224;1575:43;;;;;;;;;1492:48;1575:43;;;1307:1537;1641:14;;;1637:53;;590:14224;;1838:49;590:14224;1838:49;;1492:48;1838:49;;590:14224;1838:49;;590:14224;1838:49;;;;;;;;;1492:48;1838:49;;;1307:1537;590:14224;;;1492:48;590:14224;;;1924:52;;;;590:14224;1924:52;;;;;;;;;;1492:48;1924:52;;;1307:1537;590:14224;;;2081:15;;;:28;;2077:66;;2158:28;;;;;;2380;2466;2361:134;2380:28;2379:69;2380:28;;2345:150;2380:28;;:::i;:::-;2413:34;2081:15;;2413:34;:::i;2379:69::-;2466:28;;:::i;2361:134::-;2345:150;;:::i;2154:684::-;2712:28;2798;2693:134;2712:28;2711:69;2712:28;2677:150;2712:28;;;:::i;2693:134::-;2677:150;;:::i;2077:66::-;2124:19;;;;;:::o;1924:52::-;;;;;;-1:-1:-1;1924:52:83;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;590:14224;;1492:48;590:14224;;;;;1838:49;;;;;;;;;;;;;;;;:::i;:::-;;;590:14224;;;;-1:-1:-1;590:14224:83;;;1838:49;;;;;;;;590:14224;;;1492:48;590:14224;;;;;1637:53;1670:20;;;;;;;;:::o;1575:43::-;;;;;;;;;;;;;;;;:::i;:::-;;;590:14224;;;;;;1575:43;;;;;;;;;1492:48;;;;;;;;;;;;;;;:::i;:::-;;;;;;590:14224;;;1492:48;590:14224;;;;;10891:1245;;;590:14224;;;;;;;11082:33;;;;590:14224;;;11082:33;;;;;590:14224;11082:33;590:14224;;;;;;;;11082:33;;;;;;;-1:-1:-1;11082:33:83;;;10891:1245;590:14224;;;;;11137:31;;;;11082:33;11137:31;;590:14224;11137:31;;590:14224;11137:31;;;;;;;;;-1:-1:-1;11137:31:83;;;10891:1245;590:14224;;;;;;11171:53;;;;590:14224;11171:53;;11082:33;11171:53;;590:14224;11171:53;;;;;;;;-1:-1:-1;11171:53:83;;;10891:1245;11137:87;;;11303:29;11137:87;11248:31;11137:87;;:::i;:::-;11248:31;;;:::i;:::-;11303:29;;;:::i;:::-;11463:10;;;;11459:453;;1087:38:65;1044:84;12090:22:83;1112:9:65;12090:22:83;5595:64;12090:22;;1056:71:65;12090:22:83;;:::i;11459:453::-;11858:22;;11853:59;11858:22;;;11854:26;11885;11858:22;;11889;11858;;;:::i;11854:26::-;11889:22;;:::i;11171:53::-;;;;;;;;;;;;;;;;:::i;:::-;;;590:14224;;;;;;;11137:87;11248:31;11171:53;;;;;;;11137:31;;;;;;;;;;;;;;;;;:::i;:::-;;;590:14224;;;;;;;11137:31;;;;;;;;590:14224;;;-1:-1:-1;590:14224:83;;;;;11082:33;;;;;;;;;;;;;;;;:::i;:::-;;;590:14224;;;;;;11082:33;;;;;;;;;12968:326;;590:14224;12968:326;13114:33;590:14224;;;13114:33;;;;590:14224;13114:33;;590:14224;;;13114:33;;;590:14224;;;13114:33;;;;;;;-1:-1:-1;13114:33:83;;;12968:326;13174:31;;;;;:::i;:::-;13219:11;;13215:25;;13273:6;590:14224;;;;;;;;;;;;;;;13258:29;;;:::i;13215:25::-;13232:8;;-1:-1:-1;13232:8:83;:::o;13114:33::-;;;;;;;;;;;;;;;;;:::i;:::-;;;590:14224;;;;-1:-1:-1;590:14224:83;;13174:31;13114:33;;;;;-1:-1:-1;13114:33:83;;2809:424:50;;2934:293;;;;;;;;;;;;;2809:424;:::o;2934:293::-;;;;;;;1849:470:65;2109:5;2076:40;1849:470;;2101:14;1849:470;2109:5;:::i;2076:40::-;2458:4:50;590:14224:83;;;;;;;;1991:321:65;;;:::i;8260:3442:50:-;8498:21;8493:26;;;8489:40;;8591:405;;;;;;9274:7;590:14224:83;9268:2:50;590:14224:83;;11601:49:50;9569:29;9563:2;10154:40;9563:2;590:14224:83;9601:7:50;590:14224:83;;;;;;;;;;;;;10092:35:50;590:14224:83;9892:31:50;590:14224:83;;;;;;10671:35:50;590:14224:83;;;10530:34:50;590:14224:83;;;10393:32:50;590:14224:83;;;;;;;;;;;;;;;;;;;;;;;;;;;9959:32:50;590:14224:83;;;;;;;;;;;10768:329:50;590:14224:83;;11663:3:50;590:14224:83;;8260:3442:50;:::o;8591:405::-;;590:14224:83;8591:405:50;;;;8489:40;8521:8;590:14224:83;8521:8:50;:::o;5293:468::-;5418:337;;;;;;;;;;;;;;;5293:468;:::o;5418:337::-;;;;;;;11837:3927;11948:3810;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11837:3927;:::o;11948:3810::-;;;;;;","linkReferences":{}},"methodIdentifiers":{"calcAsyncPriceFrom(address,address)":"c3669cb3","calcCombinedPriceCurves(uint256,uint256,uint256,uint256,uint256)":"711d7287","calcCurrentPrice(address,address,address)":"14807a59","calcCurrentPriceTo(address,address,uint256)":"179478a7","calcFee(address,uint256)":"1d16c3ee","calcLocalSwap(address,address,address,uint256)":"a2930f3c","calcPriceCurveArea(uint256,uint256,uint256)":"d0829e53","calcPriceCurveLimit(uint256,uint256,uint256)":"561ecfe1","calcPriceCurveLimitShare(uint256,uint256)":"4eb57ce6","calcReceiveAsset(address,address,uint256)":"35f4dc63","calcSendAsset(address,address,uint256)":"030d21d1","getTrueWeight(address,address)":"8d2002d3"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromAsset\",\"type\":\"address\"}],\"name\":\"calcAsyncPriceFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"input\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"A\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"B\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"W_A\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"W_B\",\"type\":\"uint256\"}],\"name\":\"calcCombinedPriceCurves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAsset\",\"type\":\"address\"}],\"name\":\"calcCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"calcAsyncPriceFromQuote\",\"type\":\"uint256\"}],\"name\":\"calcCurrentPriceTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calcFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calcLocalSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"input\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"A\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"W\",\"type\":\"uint256\"}],\"name\":\"calcPriceCurveArea\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"U\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"B\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"W\",\"type\":\"uint256\"}],\"name\":\"calcPriceCurveLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"U\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"W\",\"type\":\"uint256\"}],\"name\":\"calcPriceCurveLimitShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"U\",\"type\":\"uint256\"}],\"name\":\"calcReceiveAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calcSendAsset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getTrueWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Catalyst Labs\",\"kind\":\"dev\",\"methods\":{\"calcAsyncPriceFrom(address,address)\":{\"details\":\"Alternativly, dividing calcAsyncPriceFrom by another calcAsyncPriceFrom, results in the pairwise price.\",\"params\":{\"fromAsset\":\"The address of the token to sell.\",\"vault\":\"The vault address to examine.\"}},\"calcCombinedPriceCurves(uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"All input amounts should be the raw numbers and not WAD. Is computed through calcPriceCurveLimit(calcPriceCurveArea).\",\"params\":{\"A\":\"The current vault balance of the x token.\",\"B\":\"The current vault balance of the y token.\",\"W_A\":\"The weight of the x token.\",\"W_B\":\"TThe weight of the y token.\",\"input\":\"The input amount.\"},\"returns\":{\"_0\":\"uint256 Output denominated in output token.\"}},\"calcCurrentPrice(address,address,address)\":{\"details\":\"The mid price cannot be traded on, since the fees acts as the spread.\",\"params\":{\"fromAsset\":\"The address of the token to sell.\",\"toAsset\":\"The address of the token to buy.\",\"vault\":\"The vault address to examine.\"},\"returns\":{\"_0\":\"uint256 Output denominated in toAsset.\"}},\"calcCurrentPriceTo(address,address,uint256)\":{\"params\":{\"calcAsyncPriceFromQuote\":\"The output of calcAsyncPriceFrom.\",\"toAsset\":\"The address of the token to buy.\",\"vault\":\"The vault address to examine.\"},\"returns\":{\"_0\":\"uint256 The pairwise mid price.\"}},\"calcFee(address,uint256)\":{\"details\":\"The fee is taken from the input amount\",\"params\":{\"amount\":\"Input swap amount\",\"vault\":\"Vault to read vault fee.\"},\"returns\":{\"_0\":\"uint256 Input amount after vault fee.\"}},\"calcLocalSwap(address,address,address,uint256)\":{\"details\":\"If the vault weights of the 2 tokens are equal, a very simple curve is used. If from or to is not part of the vault, the swap will either return 0 or revert. If both from and to are not part of the vault, the swap can actually return a positive value. For on-chain calls, it is cheaper to call this function rather than the vault. However, it is not optimised for on-chain calls.\",\"params\":{\"amount\":\"The amount of from token to sell for to token.\",\"fromAsset\":\"The address of the token to sell.\",\"toAsset\":\"The address of the token to buy.\",\"vault\":\"The vault address to examine.\"},\"returns\":{\"_0\":\"uint256 Output denominated in toAsset.\"}},\"calcPriceCurveArea(uint256,uint256,uint256)\":{\"details\":\"All input amounts should be the raw numbers and not WAD. Since units are always denominated in WAD, the function should be treated as mathematically *native*.\",\"params\":{\"A\":\"The current vault balance of the x token.\",\"W\":\"The weight of the x token.\",\"input\":\"The input amount.\"},\"returns\":{\"_0\":\"uint256 Units (units are **always** WAD).\"}},\"calcPriceCurveLimit(uint256,uint256,uint256)\":{\"details\":\"All input amounts should be the raw numbers and not WAD. Since units are always multiplied by WAD, the function should be treated as mathematically *native*.\",\"params\":{\"B\":\"The current vault balance of the y token.\",\"U\":\"Incoming vault specific units.\",\"W\":\"The weight of the y token.\"},\"returns\":{\"_0\":\"uint25 Output denominated in output token. (not WAD)\"}},\"calcPriceCurveLimitShare(uint256,uint256)\":{\"details\":\"Based on _calcPriceCurveLimit but the multiplication by the specific token is never done.\",\"params\":{\"U\":\"Input units.\",\"W\":\"The generalised weights.\"},\"returns\":{\"_0\":\"uint256 Output denominated in vault share.\"}},\"calcReceiveAsset(address,address,uint256)\":{\"details\":\"Reverts if to is not a token in the vault. For on-chain calls, it is cheaper to call this function rather than the vault. However, it is not optimised for on-chain calls.\",\"params\":{\"U\":\"The number of units used to buy to.\",\"toAsset\":\"The address of the token to buy.\",\"vault\":\"The vault address to examine.\"},\"returns\":{\"_0\":\"uint256 Number of purchased tokens.\"}},\"calcSendAsset(address,address,uint256)\":{\"details\":\"Returns 0 if from is not a token in the vault Should also be exposed from any vault. For on-chain calls, it is cheaper to call this function rather than the vault. However, it is not optimised for on-chain calls.\",\"params\":{\"amount\":\"The amount of from token to sell.\",\"fromAsset\":\"The address of the token to sell.\",\"vault\":\"The vault address to examine.\"},\"returns\":{\"_0\":\"uint256 Units.\"}},\"getTrueWeight(address,address)\":{\"details\":\"If weights are being changed, the weights read directly from the vaults are only updated when they are needed. (swaps, balance changes, etc) This function implements the weight change logic (almost exactly), such that one can read the weight if one were to execute a balance change.\",\"params\":{\"asset\":\"The asset to get the weight for.\",\"vault\":\"The address of the vault to fetch the weight for.\"},\"returns\":{\"_0\":\"uint256 Returns the (estimated) true weight.\"}}},\"title\":\"Catalyst: Volatile mathematics implementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calcAsyncPriceFrom(address,address)\":{\"notice\":\"Computes part of the mid price. calcCurrentPriceTo can be used to compute the pairwise price.\"},\"calcCombinedPriceCurves(uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Solves the equation     \\\\int_{A}^{A+x} W_a/w dw = \\\\int_{B-y}^{B} W_b/w dw for y = B \\u00b7 (1 - ((A+x)/A)^(-W_a/W_b))\"},\"calcCurrentPrice(address,address,address)\":{\"notice\":\"Computes the current mid price. This is the current marginal price between the 2 assets.\"},\"calcCurrentPriceTo(address,address,uint256)\":{\"notice\":\"Computes a pairwise mid price. Requires input from calcAsyncPriceFrom.\"},\"calcFee(address,uint256)\":{\"notice\":\"Helper function which returns the amount after fee.\"},\"calcLocalSwap(address,address,address,uint256)\":{\"notice\":\"Computes the output of localSwap.\"},\"calcPriceCurveArea(uint256,uint256,uint256)\":{\"notice\":\"Computes the integral \\\\int_{A}^{A+x} W/w dw = W ln((A+x)/A) The value is returned as units, which is always WAD.\"},\"calcPriceCurveLimit(uint256,uint256,uint256)\":{\"notice\":\"Solves the equation U = \\\\int_{B-y}^{B} W/w dw for y = B \\u00b7 (1 - exp(-U/W)) The value is returned as output token. (not WAD)\"},\"calcPriceCurveLimitShare(uint256,uint256)\":{\"notice\":\"Solves the generalised swap integral.\"},\"calcReceiveAsset(address,address,uint256)\":{\"notice\":\"Computes the exchange of units to assets. This is the second and last part of a swap.\"},\"calcSendAsset(address,address,uint256)\":{\"notice\":\"Computes the exchange of assets to units. This is the first part of a swap.\"},\"getTrueWeight(address,address)\":{\"notice\":\"Helper function which returns the true weight. If weights are being adjusted, the pure vault weights might be inaccurate.\"}},\"notice\":\"This contract is not optimised for on-chain calls and serves to aid in off-chain quering.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/registry/CatalystMathVol.sol\":\"CatalystMathVol\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@lazyledger/protobuf3-solidity-lib/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/protobuf3-solidity-lib/\",\":@openzeppelin/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/openzeppelin-contracts/\",\":GeneralisedIncentives/=lib/GeneralisedIncentives/\",\":base64/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/base64/\",\":clones-with-immutable-args/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/optimism/packages/contracts-bedrock/lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":optimism/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/\",\":proto/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/proto/\",\":protobuf3-solidity-lib/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/protobuf3-solidity-lib/contracts/\",\":safe-contracts/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/\",\":solady/=lib/solady/src/\",\":solmate/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/optimism/packages/contracts-bedrock/lib/solmate/src/\",\":solmate/=lib/solmate/src/\",\":vibc-core-smart-contracts/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/GeneralisedIncentives/src/interfaces/ICrossChainReceiver.sol\":{\"keccak256\":\"0x4d1aaf650f007906fc202c636a90eea6873d7e87905dde24002a549d94d4818b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://438438012e71f56c144050d76d4b3a7bc85d4a4f4173f2da38ac70c1e14ddddf\",\"dweb:/ipfs/QmUkHayhhFZcmcsaHVRu5moKanuVghfS2KZryyJebCTxW2\"]},\"lib/GeneralisedIncentives/src/interfaces/IMessageEscrowStructs.sol\":{\"keccak256\":\"0xa32de978bb1b05f3ec859da01d24bd45ba40c5dd809e64cc3f255a1c9f6a3c4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://747fd83a3fbb82c5254a6e546a08c5cd4106e99c202734e99ab6e3f30529633e\",\"dweb:/ipfs/Qmcurn8st6LcLPnaaF4Bcr4SuYRk6QhCXYkyYPMVhjnoDn\"]},\"lib/solady/src/auth/Ownable.sol\":{\"keccak256\":\"0xc208cdd9de02bbf4b5edad18b88e23a2be7ff56d2287d5649329dc7cda64b9a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fba079cc7230c617f7493a2e97873f88e59a53a5018fcb2e2b6ac42d8aa5a3\",\"dweb:/ipfs/QmTXg8GSt8hsK2cZhbPFrund1mrwVdkLQmEPoQaFy4fhjs\"]},\"lib/solady/src/tokens/ERC20.sol\":{\"keccak256\":\"0xb4a3f9ba8a05107f7370de42cff57f3ad26dafd438712c11531a5892de2f59e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0a9ca06e3cf6dea1f9a4c5599581573b7d81cd64dc3afb582f325ccf5fdd6dc\",\"dweb:/ipfs/Qmb9r5dDceNF4W8S5u6i85RsNTgE5XG9HbTXkyS25ad3C6\"]},\"lib/solady/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x2ee0e95a9266f45e2b56e7000d4f094ae96132f7f5dbc9fe3b27867f43f8cc3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9c5a498e7237da3d55fdfed167c522c54b9cdc17641f28733e37787fa668049\",\"dweb:/ipfs/QmXCS1hgG4oPBPKhHomsFCs5iqa725kPdN16jFottg4Jb3\"]},\"lib/solady/src/utils/Initializable.sol\":{\"keccak256\":\"0x039ac865df50f874528619e58f2bfaa665b6cec82647c711e515cb252a45a2ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1886c0e71f4861a23113f9d3eb5f6f00397c1d1bf0191f92534c177a79ac8559\",\"dweb:/ipfs/QmPLWU427MN9KHFg6DFkrYNutCDLdtNSQLaqmPqKcoPRLy\"]},\"lib/solady/src/utils/LibClone.sol\":{\"keccak256\":\"0x6ba469171b7d79d0e2bb3999210353e89dced6c85ac2c06bb58e2ef09ac48f26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://778a87e2973196e0f2f7b716cd28646a901290998f73c053c984fac052ca1620\",\"dweb:/ipfs/QmcYg5fQyCHw7sZHmdHZtGwKEguthWjNd87oU9DWHtCLsN\"]},\"lib/solady/src/utils/Multicallable.sol\":{\"keccak256\":\"0x0f5895a87b561dcf8b4d4068e1a56ab28bbebde08ff88534bdc8fe0379516d1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbf0a55f90662536abe978d26b44a76a3ead4e962db205e64850d6c8276129bf\",\"dweb:/ipfs/QmZXGTxig4Kk4uxeCJzMW5xRBqWSUEKTtdwRDd93121CyV\"]},\"lib/solady/src/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xdb28f318ec45197a6c7cc2abebed67d7cb8b965838ef962e3844423256a9ddb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://873cd46b77a2aeb781e7a0d131e7299151323ed884c330101a51d0727e218d98\",\"dweb:/ipfs/QmddadCjyedztvdSgLZEyKWoRes2SqtpviSjhEbSNrkUoi\"]},\"lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xf98506fade18a92e3d8d0a0ca0bdaeaa099d7620aac2a9d76b5f3d0bcd10691c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3495c9d108bc69951a12c5ce9f05851cc921f0bb69e2505756e79f3ddab4e1a\",\"dweb:/ipfs/QmT3XwbmdbQCxw7iNcF7DoiypDd5vs2ETFWirXqmJ86Meg\"]},\"src/CatalystFactory.sol\":{\"keccak256\":\"0xaf0c5e2130c3b2c2891d254d40138f999a189c77cc0c9dd72c6bf587129f7ece\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://73e53c5872f95e1c7bc52d7f7eca8866d6b5c4d83de8054511715a83ba29181f\",\"dweb:/ipfs/QmfLW6jtKVJNpXsvdsqwZdDyFpAzsZpYd1dAynUCiAU83c\"]},\"src/CatalystVaultCommon.sol\":{\"keccak256\":\"0x488c253ff4bdacf3795517003cf50030134cf1ad9b4706a2c9b9cb914245afdd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3068efaddb360acfe584b54c527472221e6b53ac19cee8cbe7b860f491701d36\",\"dweb:/ipfs/QmaNBZ153dUxkDkpHoB2yHEfZqpuutaW3N7VpHzdNx6G8g\"]},\"src/CatalystVaultVolatile.sol\":{\"keccak256\":\"0x9f581fb89deed9e85346dd376d30c697cae15b3b06628dc34a7a642d2d4b7566\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0dd4e20aa0caf57e34f856c04065589a40ff642f1eba63aac4df0ee4809e0a29\",\"dweb:/ipfs/QmNmccepSUBwmeaEbyseYDLLVLWvS6iktALAm8fcyv2tAV\"]},\"src/ICatalystV1Vault.sol\":{\"keccak256\":\"0x20faff8f3980d4d7187872f21de1802ec8e54b3d0d0d3664f7cb58e51890c071\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a930678a1b1e2dff44f8e82f0aea105cd110a3a32281b1cbf179210ee07d9151\",\"dweb:/ipfs/QmTwzLp11uzZJxGCSKs5ZMVThmYxLEQd4W9XBsSa3Kht1B\"]},\"src/IntegralsVolatile.sol\":{\"keccak256\":\"0x2831de1fc0dc6f1fe8732ed1ef4cf891ff771a6d7591e1650e421418ae7d5544\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://109a04a3a14b2c0d228ed42a33341801c07dc3928c4983c639c3ce55808ade05\",\"dweb:/ipfs/QmVHNFBoFoCmdE344TBD91gpZbuGbmMeorX32rx1gJ6H1Q\"]},\"src/interfaces/ICatalystChainInterface.sol\":{\"keccak256\":\"0xb7cca9cc0b6a74bb802763ebd1856935549a8e891c7d22a1605aa1ce2506311a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fc1d2aea92bd3597ed9c975e3c35a9228e4b18e415dca27774ee88eecbb1b3e\",\"dweb:/ipfs/QmbGSkLFvLMDNtkKiYpMMHqbujkriroDBZJ9cJPqLDvT7p\"]},\"src/interfaces/ICatalystV1Factory.sol\":{\"keccak256\":\"0x9b307b6d4894e1367f06550bcffbd2de3d3510031540b6e196c49f37962b096e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62e08eafc79420f9485160d6c9322052aca8b430ab1fabecb547d4819a4d02fc\",\"dweb:/ipfs/QmRKS4pphnY79SLvfLhYgnq2BkWBKXfnRjHFKxK7amR1qW\"]},\"src/interfaces/ICatalystV1FactoryEvents.sol\":{\"keccak256\":\"0x97a2fe7229d355c06b2a574a93f202b2f97a9066a7148f6cb6313e4a9943128c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94a13dd80abd65a9986761f8319c169fe6f703f789cc2a5e1075a15048d84268\",\"dweb:/ipfs/QmY6Ln9rFtHxt5NkCg5gmT8hiqg4fBCWtjQENpiJyy4dHs\"]},\"src/interfaces/ICatalystV1Underwriting.sol\":{\"keccak256\":\"0xa930221d5e9d7bcc8be6f9f657daeb8c5e558c33f2a6fb1aa2737d3e9938711b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8b4a37ceb78ec7342d68efdfa7a3c2736791fedcda45953814b5d1615579926\",\"dweb:/ipfs/QmQTBYghon1ESKo4PiqKA8t75NmQwXJ4rwmAcMaHSetN8M\"]},\"src/interfaces/ICatalystV1VaultAdministration.sol\":{\"keccak256\":\"0xf65c2faa00e1059fb43731aa8f83dd33755d575679057e7888e2605af44cc034\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://363b639719447cfc0b6a56a0dfa3afa5067c0111759588fe17746dc359ee2bd5\",\"dweb:/ipfs/QmVQxw2maC93Jsc5xYR7wSNZAVY1uMG1FJ84zfrX8WzDUP\"]},\"src/interfaces/ICatalystV1VaultDerived.sol\":{\"keccak256\":\"0xdad231e9a1039e3b16188c88f237aed9cd5776b1b3e7500272bebe1194397392\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21bf076e4f543e401a62eb47ade6ff6ed08c6bdb2b9275c8fd62381ec30fd27e\",\"dweb:/ipfs/QmdVBWoXeDEYLfQ6j9nw3xQ8xgSooipNqhJfcpFYgkbiCq\"]},\"src/interfaces/ICatalystV1VaultErrors.sol\":{\"keccak256\":\"0x9c30af9067b7c135e423c34d2472f6d0e7fa4c0e8b2d839f8b50ce720fe0f5aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dc17a9e8ac3cdd5d08ba287bc6afed6509929a6d07a61081c79136b838f3e59\",\"dweb:/ipfs/QmQAzHGjas1pkTDtr7R6TwwfqrGTtbZsxYJWdtF14Rc9yx\"]},\"src/interfaces/ICatalystV1VaultEvents.sol\":{\"keccak256\":\"0x2fe64fbd806d2c2db748a741c184b5b5b1643771c82df3af5d8ae2c3e76ad422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7468cb9126ad2f62feaccb4576f8b5d43463445196f07e59fab354261859a2ff\",\"dweb:/ipfs/QmTCNvpcQtoifspVSmnk5b2ivNFcBbZyZBCNr4BP5Hv1gy\"]},\"src/interfaces/ICatalystV1VaultImmutables.sol\":{\"keccak256\":\"0x4f9fd87abf5326a23d2136ec59bc95c26a04d4098cabe5e10af10ffc3018b079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1948e73d03431d42474a2aaa266ec4ad03545d33de68cb982bc3385c6b18f631\",\"dweb:/ipfs/QmSNZUkTCTje27ZeWZqs3nSTWjJscGiW98YAw5gWA5QWdW\"]},\"src/interfaces/ICatalystV1VaultPermissionless.sol\":{\"keccak256\":\"0x31e38d6346fbffb17667dc5b99cc6ea86fede5439e2b636652527b7b8b60ebd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://270d6ab6c46b5621ceb63710bdefd41e329222a05f227582522eb078cce2269d\",\"dweb:/ipfs/QmXbVSDmrrePD9qcmSYfDwpAwBjprRktHvwJjkUbbccvvZ\"]},\"src/interfaces/ICatalystV1VaultState.sol\":{\"keccak256\":\"0x97dfbf70528f0c9e6708eefe97327f859d26e7f0290a0421c5f58e82d1837571\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30fa666b1dd4b1ccb60ff4dfb7c8f38aa7a75966c4a63ca994c9846ea872c780\",\"dweb:/ipfs/QmThnfwiAZiRKEKmK3FR8B2k9PTUep8rneVjZacfa7SGsb\"]},\"src/interfaces/ICatalystV1VaultSuccessFailure.sol\":{\"keccak256\":\"0x24d287d2bc02cd018491caa9160a8c512fbe726ba04d2c7220e96cabeee909e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45606345d9c08577bc5a264ed7397ffefd4193f30220836d32e8d291e7a98cf3\",\"dweb:/ipfs/QmWzGAWBs9MPCg9ZkeuRWxenfmtsgBqtAFaFxpZ1EGsy4E\"]},\"src/interfaces/IOnCatalyst.sol\":{\"keccak256\":\"0xd26cd5d2d63fe4c29fd174a1b3d8dd99c78f08ed6fdcc13fd57ce9744608694b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6195def550c793864978b89322cecabc5ef96285f3d32b10b10552336bdf4579\",\"dweb:/ipfs/QmTXFHqAv97QNbKQy2gSi5HS72qd3UXc5NLgFxJuXxHX7B\"]},\"src/registry/CatalystMathVol.sol\":{\"keccak256\":\"0x4ec8eea1498f028f02ae3413b91a9107cc326a5e9d68dbcd6133eb6278f86b06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e73bfbe84a87ff1bc30bcb03d95950434c51d210caabceda9ff5b9100646105\",\"dweb:/ipfs/QmZYkqW55QQgp3Teqv1FUNxUMRfQDVDUcgPX4hjcg6iosh\"]},\"src/registry/interfaces/ICatalystMathLibCommon.sol\":{\"keccak256\":\"0x7188d1fc57eeb0c927be8de92c49537a132c53cf5e4d0aa544cd07a300bcab92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbdf9c7abf27dcbdd4f8b4457567bcebc81ef2dbf07afd80c17078b97693e29c\",\"dweb:/ipfs/QmaRZNkkBaCQgK7Rt1xA2395Dki9AYtXpWHtwQR2PuSGey\"]},\"src/registry/interfaces/ICatalystMathLibVol.sol\":{\"keccak256\":\"0x99406d1f8c4eb2e3fabc61df8fa5d468fdb11c24936d959c7f7165006cf495ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7e1a44e3d8aa2c2fd620301458e93c969c46b17a9b7cd028324d9ed15e10171\",\"dweb:/ipfs/QmVnFzTXXepxj1AfVHxinAKKznmbtgqKvQZNCs6c6NrrU6\"]},\"src/utils/MathConstants.sol\":{\"keccak256\":\"0x86315fe0c608e8a823acb2af0f891b9675a2c995e8ecb55ed1d0cead5ced33e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c422ecde2691856ccdb975fa4f06517d30e3f6d7f0b8dbdd1a32489e60ff6ed\",\"dweb:/ipfs/QmYCG4RdVpr7VNkYtJUzTEPJiKuBqcnMK2t88m74mTGFX2\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.22+commit.4fc1097e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"fromAsset","type":"address"}],"stateMutability":"view","type":"function","name":"calcAsyncPriceFrom","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"input","type":"uint256"},{"internalType":"uint256","name":"A","type":"uint256"},{"internalType":"uint256","name":"B","type":"uint256"},{"internalType":"uint256","name":"W_A","type":"uint256"},{"internalType":"uint256","name":"W_B","type":"uint256"}],"stateMutability":"pure","type":"function","name":"calcCombinedPriceCurves","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"fromAsset","type":"address"},{"internalType":"address","name":"toAsset","type":"address"}],"stateMutability":"view","type":"function","name":"calcCurrentPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"toAsset","type":"address"},{"internalType":"uint256","name":"calcAsyncPriceFromQuote","type":"uint256"}],"stateMutability":"view","type":"function","name":"calcCurrentPriceTo","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function","name":"calcFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"fromAsset","type":"address"},{"internalType":"address","name":"toAsset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function","name":"calcLocalSwap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"input","type":"uint256"},{"internalType":"uint256","name":"A","type":"uint256"},{"internalType":"uint256","name":"W","type":"uint256"}],"stateMutability":"pure","type":"function","name":"calcPriceCurveArea","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"U","type":"uint256"},{"internalType":"uint256","name":"B","type":"uint256"},{"internalType":"uint256","name":"W","type":"uint256"}],"stateMutability":"pure","type":"function","name":"calcPriceCurveLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"U","type":"uint256"},{"internalType":"uint256","name":"W","type":"uint256"}],"stateMutability":"pure","type":"function","name":"calcPriceCurveLimitShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"toAsset","type":"address"},{"internalType":"uint256","name":"U","type":"uint256"}],"stateMutability":"view","type":"function","name":"calcReceiveAsset","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"fromAsset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function","name":"calcSendAsset","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"vault","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"stateMutability":"view","type":"function","name":"getTrueWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"calcAsyncPriceFrom(address,address)":{"details":"Alternativly, dividing calcAsyncPriceFrom by another calcAsyncPriceFrom, results in the pairwise price.","params":{"fromAsset":"The address of the token to sell.","vault":"The vault address to examine."}},"calcCombinedPriceCurves(uint256,uint256,uint256,uint256,uint256)":{"details":"All input amounts should be the raw numbers and not WAD. Is computed through calcPriceCurveLimit(calcPriceCurveArea).","params":{"A":"The current vault balance of the x token.","B":"The current vault balance of the y token.","W_A":"The weight of the x token.","W_B":"TThe weight of the y token.","input":"The input amount."},"returns":{"_0":"uint256 Output denominated in output token."}},"calcCurrentPrice(address,address,address)":{"details":"The mid price cannot be traded on, since the fees acts as the spread.","params":{"fromAsset":"The address of the token to sell.","toAsset":"The address of the token to buy.","vault":"The vault address to examine."},"returns":{"_0":"uint256 Output denominated in toAsset."}},"calcCurrentPriceTo(address,address,uint256)":{"params":{"calcAsyncPriceFromQuote":"The output of calcAsyncPriceFrom.","toAsset":"The address of the token to buy.","vault":"The vault address to examine."},"returns":{"_0":"uint256 The pairwise mid price."}},"calcFee(address,uint256)":{"details":"The fee is taken from the input amount","params":{"amount":"Input swap amount","vault":"Vault to read vault fee."},"returns":{"_0":"uint256 Input amount after vault fee."}},"calcLocalSwap(address,address,address,uint256)":{"details":"If the vault weights of the 2 tokens are equal, a very simple curve is used. If from or to is not part of the vault, the swap will either return 0 or revert. If both from and to are not part of the vault, the swap can actually return a positive value. For on-chain calls, it is cheaper to call this function rather than the vault. However, it is not optimised for on-chain calls.","params":{"amount":"The amount of from token to sell for to token.","fromAsset":"The address of the token to sell.","toAsset":"The address of the token to buy.","vault":"The vault address to examine."},"returns":{"_0":"uint256 Output denominated in toAsset."}},"calcPriceCurveArea(uint256,uint256,uint256)":{"details":"All input amounts should be the raw numbers and not WAD. Since units are always denominated in WAD, the function should be treated as mathematically *native*.","params":{"A":"The current vault balance of the x token.","W":"The weight of the x token.","input":"The input amount."},"returns":{"_0":"uint256 Units (units are **always** WAD)."}},"calcPriceCurveLimit(uint256,uint256,uint256)":{"details":"All input amounts should be the raw numbers and not WAD. Since units are always multiplied by WAD, the function should be treated as mathematically *native*.","params":{"B":"The current vault balance of the y token.","U":"Incoming vault specific units.","W":"The weight of the y token."},"returns":{"_0":"uint25 Output denominated in output token. (not WAD)"}},"calcPriceCurveLimitShare(uint256,uint256)":{"details":"Based on _calcPriceCurveLimit but the multiplication by the specific token is never done.","params":{"U":"Input units.","W":"The generalised weights."},"returns":{"_0":"uint256 Output denominated in vault share."}},"calcReceiveAsset(address,address,uint256)":{"details":"Reverts if to is not a token in the vault. For on-chain calls, it is cheaper to call this function rather than the vault. However, it is not optimised for on-chain calls.","params":{"U":"The number of units used to buy to.","toAsset":"The address of the token to buy.","vault":"The vault address to examine."},"returns":{"_0":"uint256 Number of purchased tokens."}},"calcSendAsset(address,address,uint256)":{"details":"Returns 0 if from is not a token in the vault Should also be exposed from any vault. For on-chain calls, it is cheaper to call this function rather than the vault. However, it is not optimised for on-chain calls.","params":{"amount":"The amount of from token to sell.","fromAsset":"The address of the token to sell.","vault":"The vault address to examine."},"returns":{"_0":"uint256 Units."}},"getTrueWeight(address,address)":{"details":"If weights are being changed, the weights read directly from the vaults are only updated when they are needed. (swaps, balance changes, etc) This function implements the weight change logic (almost exactly), such that one can read the weight if one were to execute a balance change.","params":{"asset":"The asset to get the weight for.","vault":"The address of the vault to fetch the weight for."},"returns":{"_0":"uint256 Returns the (estimated) true weight."}}},"version":1},"userdoc":{"kind":"user","methods":{"calcAsyncPriceFrom(address,address)":{"notice":"Computes part of the mid price. calcCurrentPriceTo can be used to compute the pairwise price."},"calcCombinedPriceCurves(uint256,uint256,uint256,uint256,uint256)":{"notice":"Solves the equation     \\int_{A}^{A+x} W_a/w dw = \\int_{B-y}^{B} W_b/w dw for y = B · (1 - ((A+x)/A)^(-W_a/W_b))"},"calcCurrentPrice(address,address,address)":{"notice":"Computes the current mid price. This is the current marginal price between the 2 assets."},"calcCurrentPriceTo(address,address,uint256)":{"notice":"Computes a pairwise mid price. Requires input from calcAsyncPriceFrom."},"calcFee(address,uint256)":{"notice":"Helper function which returns the amount after fee."},"calcLocalSwap(address,address,address,uint256)":{"notice":"Computes the output of localSwap."},"calcPriceCurveArea(uint256,uint256,uint256)":{"notice":"Computes the integral \\int_{A}^{A+x} W/w dw = W ln((A+x)/A) The value is returned as units, which is always WAD."},"calcPriceCurveLimit(uint256,uint256,uint256)":{"notice":"Solves the equation U = \\int_{B-y}^{B} W/w dw for y = B · (1 - exp(-U/W)) The value is returned as output token. (not WAD)"},"calcPriceCurveLimitShare(uint256,uint256)":{"notice":"Solves the generalised swap integral."},"calcReceiveAsset(address,address,uint256)":{"notice":"Computes the exchange of units to assets. This is the second and last part of a swap."},"calcSendAsset(address,address,uint256)":{"notice":"Computes the exchange of assets to units. This is the first part of a swap."},"getTrueWeight(address,address)":{"notice":"Helper function which returns the true weight. If weights are being adjusted, the pure vault weights might be inaccurate."}},"version":1}},"settings":{"remappings":["@lazyledger/protobuf3-solidity-lib/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/protobuf3-solidity-lib/","@openzeppelin/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/openzeppelin-contracts/","GeneralisedIncentives/=lib/GeneralisedIncentives/","base64/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/base64/","clones-with-immutable-args/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/optimism/packages/contracts-bedrock/lib/clones-with-immutable-args/src/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/optimism/packages/contracts-bedrock/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/","optimism/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/","proto/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/proto/","protobuf3-solidity-lib/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/protobuf3-solidity-lib/contracts/","safe-contracts/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/optimism/packages/contracts-bedrock/lib/safe-contracts/contracts/","solady/=lib/solady/src/","solmate/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/lib/optimism/packages/contracts-bedrock/lib/solmate/src/","solmate/=lib/solmate/src/","vibc-core-smart-contracts/=lib/GeneralisedIncentives/lib/vibc-core-smart-contracts/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/registry/CatalystMathVol.sol":"CatalystMathVol"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/GeneralisedIncentives/src/interfaces/ICrossChainReceiver.sol":{"keccak256":"0x4d1aaf650f007906fc202c636a90eea6873d7e87905dde24002a549d94d4818b","urls":["bzz-raw://438438012e71f56c144050d76d4b3a7bc85d4a4f4173f2da38ac70c1e14ddddf","dweb:/ipfs/QmUkHayhhFZcmcsaHVRu5moKanuVghfS2KZryyJebCTxW2"],"license":"MIT"},"lib/GeneralisedIncentives/src/interfaces/IMessageEscrowStructs.sol":{"keccak256":"0xa32de978bb1b05f3ec859da01d24bd45ba40c5dd809e64cc3f255a1c9f6a3c4a","urls":["bzz-raw://747fd83a3fbb82c5254a6e546a08c5cd4106e99c202734e99ab6e3f30529633e","dweb:/ipfs/Qmcurn8st6LcLPnaaF4Bcr4SuYRk6QhCXYkyYPMVhjnoDn"],"license":"MIT"},"lib/solady/src/auth/Ownable.sol":{"keccak256":"0xc208cdd9de02bbf4b5edad18b88e23a2be7ff56d2287d5649329dc7cda64b9a3","urls":["bzz-raw://e8fba079cc7230c617f7493a2e97873f88e59a53a5018fcb2e2b6ac42d8aa5a3","dweb:/ipfs/QmTXg8GSt8hsK2cZhbPFrund1mrwVdkLQmEPoQaFy4fhjs"],"license":"MIT"},"lib/solady/src/tokens/ERC20.sol":{"keccak256":"0xb4a3f9ba8a05107f7370de42cff57f3ad26dafd438712c11531a5892de2f59e0","urls":["bzz-raw://f0a9ca06e3cf6dea1f9a4c5599581573b7d81cd64dc3afb582f325ccf5fdd6dc","dweb:/ipfs/Qmb9r5dDceNF4W8S5u6i85RsNTgE5XG9HbTXkyS25ad3C6"],"license":"MIT"},"lib/solady/src/utils/FixedPointMathLib.sol":{"keccak256":"0x2ee0e95a9266f45e2b56e7000d4f094ae96132f7f5dbc9fe3b27867f43f8cc3a","urls":["bzz-raw://d9c5a498e7237da3d55fdfed167c522c54b9cdc17641f28733e37787fa668049","dweb:/ipfs/QmXCS1hgG4oPBPKhHomsFCs5iqa725kPdN16jFottg4Jb3"],"license":"MIT"},"lib/solady/src/utils/Initializable.sol":{"keccak256":"0x039ac865df50f874528619e58f2bfaa665b6cec82647c711e515cb252a45a2ec","urls":["bzz-raw://1886c0e71f4861a23113f9d3eb5f6f00397c1d1bf0191f92534c177a79ac8559","dweb:/ipfs/QmPLWU427MN9KHFg6DFkrYNutCDLdtNSQLaqmPqKcoPRLy"],"license":"MIT"},"lib/solady/src/utils/LibClone.sol":{"keccak256":"0x6ba469171b7d79d0e2bb3999210353e89dced6c85ac2c06bb58e2ef09ac48f26","urls":["bzz-raw://778a87e2973196e0f2f7b716cd28646a901290998f73c053c984fac052ca1620","dweb:/ipfs/QmcYg5fQyCHw7sZHmdHZtGwKEguthWjNd87oU9DWHtCLsN"],"license":"MIT"},"lib/solady/src/utils/Multicallable.sol":{"keccak256":"0x0f5895a87b561dcf8b4d4068e1a56ab28bbebde08ff88534bdc8fe0379516d1c","urls":["bzz-raw://bbf0a55f90662536abe978d26b44a76a3ead4e962db205e64850d6c8276129bf","dweb:/ipfs/QmZXGTxig4Kk4uxeCJzMW5xRBqWSUEKTtdwRDd93121CyV"],"license":"MIT"},"lib/solady/src/utils/ReentrancyGuard.sol":{"keccak256":"0xdb28f318ec45197a6c7cc2abebed67d7cb8b965838ef962e3844423256a9ddb8","urls":["bzz-raw://873cd46b77a2aeb781e7a0d131e7299151323ed884c330101a51d0727e218d98","dweb:/ipfs/QmddadCjyedztvdSgLZEyKWoRes2SqtpviSjhEbSNrkUoi"],"license":"MIT"},"lib/solady/src/utils/SafeTransferLib.sol":{"keccak256":"0xf98506fade18a92e3d8d0a0ca0bdaeaa099d7620aac2a9d76b5f3d0bcd10691c","urls":["bzz-raw://a3495c9d108bc69951a12c5ce9f05851cc921f0bb69e2505756e79f3ddab4e1a","dweb:/ipfs/QmT3XwbmdbQCxw7iNcF7DoiypDd5vs2ETFWirXqmJ86Meg"],"license":"MIT"},"src/CatalystFactory.sol":{"keccak256":"0xaf0c5e2130c3b2c2891d254d40138f999a189c77cc0c9dd72c6bf587129f7ece","urls":["bzz-raw://73e53c5872f95e1c7bc52d7f7eca8866d6b5c4d83de8054511715a83ba29181f","dweb:/ipfs/QmfLW6jtKVJNpXsvdsqwZdDyFpAzsZpYd1dAynUCiAU83c"],"license":"BUSL-1.1"},"src/CatalystVaultCommon.sol":{"keccak256":"0x488c253ff4bdacf3795517003cf50030134cf1ad9b4706a2c9b9cb914245afdd","urls":["bzz-raw://3068efaddb360acfe584b54c527472221e6b53ac19cee8cbe7b860f491701d36","dweb:/ipfs/QmaNBZ153dUxkDkpHoB2yHEfZqpuutaW3N7VpHzdNx6G8g"],"license":"BUSL-1.1"},"src/CatalystVaultVolatile.sol":{"keccak256":"0x9f581fb89deed9e85346dd376d30c697cae15b3b06628dc34a7a642d2d4b7566","urls":["bzz-raw://0dd4e20aa0caf57e34f856c04065589a40ff642f1eba63aac4df0ee4809e0a29","dweb:/ipfs/QmNmccepSUBwmeaEbyseYDLLVLWvS6iktALAm8fcyv2tAV"],"license":"BUSL-1.1"},"src/ICatalystV1Vault.sol":{"keccak256":"0x20faff8f3980d4d7187872f21de1802ec8e54b3d0d0d3664f7cb58e51890c071","urls":["bzz-raw://a930678a1b1e2dff44f8e82f0aea105cd110a3a32281b1cbf179210ee07d9151","dweb:/ipfs/QmTwzLp11uzZJxGCSKs5ZMVThmYxLEQd4W9XBsSa3Kht1B"],"license":"BUSL-1.1"},"src/IntegralsVolatile.sol":{"keccak256":"0x2831de1fc0dc6f1fe8732ed1ef4cf891ff771a6d7591e1650e421418ae7d5544","urls":["bzz-raw://109a04a3a14b2c0d228ed42a33341801c07dc3928c4983c639c3ce55808ade05","dweb:/ipfs/QmVHNFBoFoCmdE344TBD91gpZbuGbmMeorX32rx1gJ6H1Q"],"license":"BUSL-1.1"},"src/interfaces/ICatalystChainInterface.sol":{"keccak256":"0xb7cca9cc0b6a74bb802763ebd1856935549a8e891c7d22a1605aa1ce2506311a","urls":["bzz-raw://6fc1d2aea92bd3597ed9c975e3c35a9228e4b18e415dca27774ee88eecbb1b3e","dweb:/ipfs/QmbGSkLFvLMDNtkKiYpMMHqbujkriroDBZJ9cJPqLDvT7p"],"license":"MIT"},"src/interfaces/ICatalystV1Factory.sol":{"keccak256":"0x9b307b6d4894e1367f06550bcffbd2de3d3510031540b6e196c49f37962b096e","urls":["bzz-raw://62e08eafc79420f9485160d6c9322052aca8b430ab1fabecb547d4819a4d02fc","dweb:/ipfs/QmRKS4pphnY79SLvfLhYgnq2BkWBKXfnRjHFKxK7amR1qW"],"license":"MIT"},"src/interfaces/ICatalystV1FactoryEvents.sol":{"keccak256":"0x97a2fe7229d355c06b2a574a93f202b2f97a9066a7148f6cb6313e4a9943128c","urls":["bzz-raw://94a13dd80abd65a9986761f8319c169fe6f703f789cc2a5e1075a15048d84268","dweb:/ipfs/QmY6Ln9rFtHxt5NkCg5gmT8hiqg4fBCWtjQENpiJyy4dHs"],"license":"MIT"},"src/interfaces/ICatalystV1Underwriting.sol":{"keccak256":"0xa930221d5e9d7bcc8be6f9f657daeb8c5e558c33f2a6fb1aa2737d3e9938711b","urls":["bzz-raw://a8b4a37ceb78ec7342d68efdfa7a3c2736791fedcda45953814b5d1615579926","dweb:/ipfs/QmQTBYghon1ESKo4PiqKA8t75NmQwXJ4rwmAcMaHSetN8M"],"license":"MIT"},"src/interfaces/ICatalystV1VaultAdministration.sol":{"keccak256":"0xf65c2faa00e1059fb43731aa8f83dd33755d575679057e7888e2605af44cc034","urls":["bzz-raw://363b639719447cfc0b6a56a0dfa3afa5067c0111759588fe17746dc359ee2bd5","dweb:/ipfs/QmVQxw2maC93Jsc5xYR7wSNZAVY1uMG1FJ84zfrX8WzDUP"],"license":"MIT"},"src/interfaces/ICatalystV1VaultDerived.sol":{"keccak256":"0xdad231e9a1039e3b16188c88f237aed9cd5776b1b3e7500272bebe1194397392","urls":["bzz-raw://21bf076e4f543e401a62eb47ade6ff6ed08c6bdb2b9275c8fd62381ec30fd27e","dweb:/ipfs/QmdVBWoXeDEYLfQ6j9nw3xQ8xgSooipNqhJfcpFYgkbiCq"],"license":"MIT"},"src/interfaces/ICatalystV1VaultErrors.sol":{"keccak256":"0x9c30af9067b7c135e423c34d2472f6d0e7fa4c0e8b2d839f8b50ce720fe0f5aa","urls":["bzz-raw://2dc17a9e8ac3cdd5d08ba287bc6afed6509929a6d07a61081c79136b838f3e59","dweb:/ipfs/QmQAzHGjas1pkTDtr7R6TwwfqrGTtbZsxYJWdtF14Rc9yx"],"license":"MIT"},"src/interfaces/ICatalystV1VaultEvents.sol":{"keccak256":"0x2fe64fbd806d2c2db748a741c184b5b5b1643771c82df3af5d8ae2c3e76ad422","urls":["bzz-raw://7468cb9126ad2f62feaccb4576f8b5d43463445196f07e59fab354261859a2ff","dweb:/ipfs/QmTCNvpcQtoifspVSmnk5b2ivNFcBbZyZBCNr4BP5Hv1gy"],"license":"MIT"},"src/interfaces/ICatalystV1VaultImmutables.sol":{"keccak256":"0x4f9fd87abf5326a23d2136ec59bc95c26a04d4098cabe5e10af10ffc3018b079","urls":["bzz-raw://1948e73d03431d42474a2aaa266ec4ad03545d33de68cb982bc3385c6b18f631","dweb:/ipfs/QmSNZUkTCTje27ZeWZqs3nSTWjJscGiW98YAw5gWA5QWdW"],"license":"MIT"},"src/interfaces/ICatalystV1VaultPermissionless.sol":{"keccak256":"0x31e38d6346fbffb17667dc5b99cc6ea86fede5439e2b636652527b7b8b60ebd1","urls":["bzz-raw://270d6ab6c46b5621ceb63710bdefd41e329222a05f227582522eb078cce2269d","dweb:/ipfs/QmXbVSDmrrePD9qcmSYfDwpAwBjprRktHvwJjkUbbccvvZ"],"license":"MIT"},"src/interfaces/ICatalystV1VaultState.sol":{"keccak256":"0x97dfbf70528f0c9e6708eefe97327f859d26e7f0290a0421c5f58e82d1837571","urls":["bzz-raw://30fa666b1dd4b1ccb60ff4dfb7c8f38aa7a75966c4a63ca994c9846ea872c780","dweb:/ipfs/QmThnfwiAZiRKEKmK3FR8B2k9PTUep8rneVjZacfa7SGsb"],"license":"MIT"},"src/interfaces/ICatalystV1VaultSuccessFailure.sol":{"keccak256":"0x24d287d2bc02cd018491caa9160a8c512fbe726ba04d2c7220e96cabeee909e6","urls":["bzz-raw://45606345d9c08577bc5a264ed7397ffefd4193f30220836d32e8d291e7a98cf3","dweb:/ipfs/QmWzGAWBs9MPCg9ZkeuRWxenfmtsgBqtAFaFxpZ1EGsy4E"],"license":"MIT"},"src/interfaces/IOnCatalyst.sol":{"keccak256":"0xd26cd5d2d63fe4c29fd174a1b3d8dd99c78f08ed6fdcc13fd57ce9744608694b","urls":["bzz-raw://6195def550c793864978b89322cecabc5ef96285f3d32b10b10552336bdf4579","dweb:/ipfs/QmTXFHqAv97QNbKQy2gSi5HS72qd3UXc5NLgFxJuXxHX7B"],"license":"MIT"},"src/registry/CatalystMathVol.sol":{"keccak256":"0x4ec8eea1498f028f02ae3413b91a9107cc326a5e9d68dbcd6133eb6278f86b06","urls":["bzz-raw://9e73bfbe84a87ff1bc30bcb03d95950434c51d210caabceda9ff5b9100646105","dweb:/ipfs/QmZYkqW55QQgp3Teqv1FUNxUMRfQDVDUcgPX4hjcg6iosh"],"license":"MIT"},"src/registry/interfaces/ICatalystMathLibCommon.sol":{"keccak256":"0x7188d1fc57eeb0c927be8de92c49537a132c53cf5e4d0aa544cd07a300bcab92","urls":["bzz-raw://bbdf9c7abf27dcbdd4f8b4457567bcebc81ef2dbf07afd80c17078b97693e29c","dweb:/ipfs/QmaRZNkkBaCQgK7Rt1xA2395Dki9AYtXpWHtwQR2PuSGey"],"license":"MIT"},"src/registry/interfaces/ICatalystMathLibVol.sol":{"keccak256":"0x99406d1f8c4eb2e3fabc61df8fa5d468fdb11c24936d959c7f7165006cf495ff","urls":["bzz-raw://c7e1a44e3d8aa2c2fd620301458e93c969c46b17a9b7cd028324d9ed15e10171","dweb:/ipfs/QmVnFzTXXepxj1AfVHxinAKKznmbtgqKvQZNCs6c6NrrU6"],"license":"MIT"},"src/utils/MathConstants.sol":{"keccak256":"0x86315fe0c608e8a823acb2af0f891b9675a2c995e8ecb55ed1d0cead5ced33e1","urls":["bzz-raw://5c422ecde2691856ccdb975fa4f06517d30e3f6d7f0b8dbdd1a32489e60ff6ed","dweb:/ipfs/QmYCG4RdVpr7VNkYtJUzTEPJiKuBqcnMK2t88m74mTGFX2"],"license":"MIT"}},"version":1},"id":83}