# Global Relayer configuration
global:
  # ! The 'privateKey' of the account that will be submitting the packet relays is by default
  # ! loaded from the environment variable 'RELAYER_PRIVATE_KEY'. Alternatively, the privateKey
  # ! may be specified here (not recommended).
  # privateKey: ''
  # ! Optionally, custom privateKey loaders may be implemented and specified (NOTE: the 'env' 
  # ! loader is used if no privateKey configuration is specified):
  # privateKey:
  #   loader: 'env'                     # The privateKey loader name (must match the implementation on src/config/privateKeyLoaders/<loader>.ts).
  #   customLoaderConfig: ''            # Custom loader configs may be specified.

  logLevel: 'info'

  monitor:
    interval: 5000                      # Interval at which to poll the chains RPCs for new blocks
    blockDelay: 1                       # Delay with which to process the chain blocks

  getter:
    retryInterval: 5000                 # Time to wait before retrying a failed query
    maxBlocks: 1000                     # Maximum number of blocks to query in a single call

  submitter:
    enabled: true
    newOrdersDelay: 1000                # Time to wait before processing new 'submission' orders
    retryInterval: 30000                # Time to wait before retrying a failed transaction
    maxTries: 3                         # Maximum tries for a transaction
    maxPendingTransactions: 50          # Maximum number of transactions within the 'submit' pipeline.
    evaluationRetryInterval: 3600000    # Interval at which to reevaluate whether to relay a message.
    maxEvaluationDuration: 86400000     # Time after which to drop an undelivered message.

  evaluator:
    verificationDeliveryGas: '55000'    # Gas amount used for packet verification upon delivery.
    unrewardedDeliveryGas: '25000'      # Gas amount that will be unrewarded on delivery submission.
    minDeliveryReward: 0.001            # In the 'pricingDenomination' specified below
    relativeMinDeliveryReward: 0.001
    verificationAckGas: '55000'         # Gas amount used for packet verification upon ack.
    unrewardedAckGas: '25000'           # Gas amount that will be unrewarded on ack submission.
    minAckReward: 0.001                 # In the 'pricingDenomination' specified below
    relativeMinAckReward: 0.001
    profitabilityFactor: 1.0            # Profitiability evaluation adjustment factor. A larger
                                        # factor implies a larger profitability guarantee.

  pricing:
    provider: 'coin-gecko'
    coinDecimals: 18
    pricingDenomination: 'usd'


  wallet:
    retryInterval: 30000                # Time to wait before retrying a failed transaction
    maxTries: 3                         # Maximum tries for a transaction
    maxPendingTransactions: 50          # Maximum number of transactions within the 'submit' pipeline
    confirmations: 1                    # Number of confirmations to wait before accepting a transaction as 'completed'.
    confirmationTimeout: 90000          # Timeout for a transaction to confirm

    lowGasBalanceWarning:               # Gas balance below which a 'low balance' warning is emitted.
      '1000000000000000000'
    gasBalanceUpdateInterval: 50        # Number of transactions after which to update the Underwriter gas balance from the rpc. 

    # EIP-1559 Transactions
    maxFeePerGas: '10000000000'        # 'maxFeePerGas' set for all transactions (for chains that support eip-1559)

    maxAllowedPriorityFeePerGas:        # Upper bound to the 'maxPriorityFeePerGas' set on transactions (for chains that support eip-1559)
      '5000000000'
    maxPriorityFeeAdjustmentFactor:     # Decimal factor used to adjust the 'maxPriorityFeePerGas' returned by 'getFeeData()'. 
      1.01                              # The resulting value is set as the 'maxPriorityFeePerGas' property of the transaction
                                        # if it is smaller than the configuration property 'maxAllowedPriorityFeePerGas' (if set).

    # Legacy Transactions
    maxAllowedGasPrice: '10000000000'  # Upper bound to the 'gasPrice' set on transactions (for chains that do not support eip-1559)
    gasPriceAdjustmentFactor: 1.01      # Decimal factor used to adjust the 'gasPrice' returned by 'getFeeData()'. The resulting 
                                        # value is set as the 'gasPrice' property of the transaction if it is smaller than the 
                                        # configuration property 'maxAllowedGasPrice' (if set).

    # All Transactions
    priorityAdjustmentFactor: 1.05      # Decimal factor used to adjust **all** the gas prices (including 'maxFeePerGas') for 
                                        # priority transactions.

  persister:
    enabled: false
    postgresString: 'postgresql://username:password@location/database?sslmode=require'

# AMBs configuration
ambs:
  - name: wormhole
    isTestnet: false

# Chain configuration
chains:
  - chainId: 10
    name: 'OP Mainnet'
    rpc: 'https://mainnet.optimism.io'
    resolver: 'optimism'

    # startingBlock   # The block number at which to start Relaying (not all AMB collectors may support this property)
    # stoppingBlock   # The block number at which to stop Relaying (not all AMB collectors may support this property)

    # Overrides
    monitor:
      interval: 1000

    pricing:
      gasCoinId: 'ethereum'  # coin-gecko pricing provider specific configuration

    # AMB configuration
    wormhole:
      wormholeChainId: 24
      incentivesAddress: '0x8C8727276725b7Da11fDA6e2646B2d2448E5B3c5'
      bridgeAddress: '0xEe91C335eab126dF5fDB3797EA9d6aD93aeC9722'

  - chainId: 81457
    name: 'Blast Mainnet'
    rpc: 'https://rpc.blast.io'
    monitor:
      interval: 1000
    pricing:
      gasCoinId: 'ethereum'  # coin-gecko pricing provider specific configuration
    wormhole:
      wormholeChainId: 36
      incentivesAddress: '0x3C5C5436BCa59042cBC835276E51428781366d85'
      bridgeAddress: '0xbebdb6C8ddC678FfA9f8748f85C815C556Dd8ac6'
  
  - chainId: 8453
    name: 'Base Mainnet'
    rpc: 'https://mainnet.base.org'
    resolver: 'base'
    monitor:
      interval: 1000
    pricing:
      gasCoinId: 'ethereum'  # coin-gecko pricing provider specific configuration
    wormhole:
      wormholeChainId: 30
      incentivesAddress: '0x3C5C5436BCa59042cBC835276E51428781366d85'
      bridgeAddress: '0xbebdb6C8ddC678FfA9f8748f85C815C556Dd8ac6'
